# Generated by Django 5.1.7 on 2025-04-26 19:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'amenities',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('area_sqft', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(choices=[('sale', 'Sale'), ('rent', 'Rent'), ('short_let', 'Short Let'), ('jv', 'Joint Venture'), ('rent_to_own', 'Rent to Own'), ('monthly_rent', 'Monthly Rent')], default='sale', max_length=20)),
                ('type', models.CharField(choices=[('flat_apartment', 'Flat/Apartment'), ('terrace', 'Terrace'), ('detached_house', 'Detached House'), ('land', 'Land'), ('joint_venture', 'Joint Venture'), ('office_space', 'Office Space'), ('hotel', 'Hotel'), ('warehouse', 'Warehouse'), ('shop', 'Shop'), ('commercial_property', 'Commercial Property')], default='flat_apartment', max_length=30)),
                ('bedrooms', models.IntegerField(default=0)),
                ('bathrooms', models.IntegerField(blank=True, default=0, null=True)),
                ('mini_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('max_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('furnished', models.BooleanField(default=False)),
                ('serviced', models.BooleanField(default=False)),
                ('keyword_tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, to='properties.amenity')),
            ],
            options={
                'db_table': 'properties',
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='properties/')),
                ('is_primary', models.BooleanField(default=False)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.property')),
            ],
            options={
                'db_table': 'property_images',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='properties.property')),
            ],
            options={
                'db_table': 'favorites',
                'unique_together': {('user', 'property')},
            },
        ),
    ]
